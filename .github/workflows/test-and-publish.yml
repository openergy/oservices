name: test-and-publish
on:
  push:
    branches:
      - 'develop'
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    outputs:
      REPOSITORY_NAME: ${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}
      VERSION: ${{ steps.set-version.outputs.VERSION }}
    steps:
      # retrieve and store repository name
      - id: set-repository-name
        run: echo "::set-output name=REPOSITORY_NAME::${{ github.event.repository.name }}"

      # checkout repo (automatically on develop)
      - uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository

      # configure git
      - run: |
          git config user.name Openergy Admin
          git config user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      # prepare conda cache
      # https://github.com/marketplace/actions/setup-miniconda#caching
      - uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{ hashFiles('${{ github.workspace }}/repo/requirements.txt') }}

      # retrieve version in RELEASE.md ('next' or version number)
      - id: set-version
        run: echo "::set-output name=VERSION::$(sed -n '0,/^##/s/## //p' RELEASE.md)"
        working-directory: ${{ github.workspace }}/repo

      # prepare version.py
      - run: echo 'version = "${{ steps.set-version.outputs.VERSION }}"\n' > ./${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}/version.py
        working-directory: ${{ github.workspace }}/repo

      # add version
      - run: git add ./${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}/version.py
        working-directory: ${{ github.workspace }}/repo

      # commit to develop
      # || : => works as try/except:pass (commit may fail in certain cases if code has not changed, \
      #  but it shouldn't be a problem)
      - run: |
          git commit -m "[CI] updated version as ${{ steps.set-version.outputs.VERSION }}" || :
          git push origin develop
        working-directory: ${{ github.workspace }}/repo

      # install miniconda with conda-build
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          conda-build-version: "*"
          auto-activate-base: true
          activate-environment: ""

      # prepare build info
      - run: |
          mkdir conda-build
          python .github/workflows-resources/create_meta.py conda-build ${{ steps.set-repository-name.outputs.REPOSITORY_NAME }} false
        working-directory: ${{ github.workspace }}/repo

      # build
      - run: conda-build . --croot ${{ github.workspace }}/conda-build-to-upload
        working-directory: ${{ github.workspace }}/repo/conda-build

      # upload build
      - uses: actions/upload-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build-to-upload
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    needs: build
    steps:
      # checkout repo (automatically on develop)
      - uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository

      # configure git
      - run: |
          git config user.name Openergy Admin
          git config user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      # download build
      - uses: actions/download-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build
      - run: cd ${{ github.workspace }} && ls -R  # fixme: remove

      # prepare miniconda cache
      - uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{ hashFiles('${{ github.workspace }}/conda-build/**') }}

      # install miniconda
      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: defaults,conda-forge

      # install package
      - run: mamba install -q -c ${{ github.workspace }}/conda-build ${{ needs.build.outputs.REPOSITORY_NAME }}=${{ needs.build.outputs.VERSION }}

      # install tests packages
      - run: mamba install pytest pytest-cov

      # copy and run tests
      - run: cp -r ${{ github.workspace }}/repo/tests ${{ github.workspace }}
      # fixme: manage coverage
      - run: pytest tests

  version:
    needs: test
    if: needs.build.outputs.VERSION != 'next'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    steps:
      # checkout repo (automatically on develop)
      - uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository

      # configure git
      - run: |
          git config user.name Openergy Admin
          git config user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      # checkout master and merge develop
      - run: |
          git checkout master
          git merge --ff-only develop || ( echo \'ERROR: please merge your branch with the current version of master before versioning\' && exit 1 )
        working-directory: ${{ github.workspace }}/repo

      # version and push master
      - run: |
          echo "Versioning to version ${{ needs.build.outputs.VERSION }}"
          git tag ${{ needs.build.outputs.VERSION }}"
          git push origin master
          git push origin ${{ needs.build.outputs.VERSION }}
        working-directory: ${{ github.workspace }}/repo

      # checkout, prepare and push develop
      - run: |
          git checkout develop
          git merge master
          # add the next version
          sed -i "0,/^##/s/##/## next\\n\\n##/" RELEASE.md
          git commit RELEASE.md -m "[CI] added ## next to RELEASE.md"
          git push origin develop
        working-directory: ${{ github.workspace }}/repo

  conda-upload:
    needs: version  # we want to make sure that versioning worked before uploading to conda channel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: $ {{ github.workspace }}
    steps:
      # download build
      - uses: actions/download-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build
      - run: ls -R

      # install rclone
      - run: |
          wget https://rclone.org/install.sh
          chmod +x install.sh
          ./install.sh
